# Generated by Django 2.1.3 on 2018-11-09 15:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('company', models.CharField(blank=True, max_length=256, null=True, verbose_name='单位/公司')),
                ('tel', models.CharField(blank=True, max_length=11, null=True, verbose_name='联系方式')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='联系地址')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='IntervalTime',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('interval', models.CharField(max_length=32, verbose_name='时间段')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '时间段',
                'verbose_name': '时间段',
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('nid', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('position', models.CharField(blank=True, max_length=256, null=True, verbose_name='地理位置')),
                ('supplier', models.CharField(blank=True, max_length=62, null=True, verbose_name='供应商')),
                ('heart_time', models.DateTimeField(blank=True, null=True, verbose_name='心跳时间')),
                ('user', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '设备',
                'verbose_name': '设备',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=32, null=True, verbose_name='标题')),
                ('files', models.FileField(upload_to='', verbose_name='文件')),
                ('create_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': '文件',
                'verbose_name': '文件',
            },
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64, verbose_name='标题')),
                ('is_publish', models.BooleanField(default=False, verbose_name='是否发布')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('files', models.ManyToManyField(blank=True, to='materials.Material')),
                ('interval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='materials.IntervalTime')),
                ('machine', models.ManyToManyField(blank=True, to='materials.Machine')),
            ],
            options={
                'verbose_name_plural': '节目单',
                'verbose_name': '节目单',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='标签')),
            ],
            options={
                'verbose_name_plural': '标签',
                'verbose_name': '标签',
            },
        ),
        migrations.AddField(
            model_name='material',
            name='tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='materials.Tag'),
        ),
        migrations.AddField(
            model_name='material',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
